############################
HPC4Stats/HPC4Stats.skeleton
############################

Douglas Nychka, douglasnychka@gmail.com and Dorit Hammerling,
dorith@ucar.edu

This is a simple skeleton set of subdirectories and source files for
using Rmpi in batch mode. The subdirectories each have README files
that will guide you through what each is used for and the appropriate
contents.

The main advantage of this framework is that with minimal setup one
can run many different batch computations for a project and keep all
the results organized and documented. The main device used here is an
"R namelist file" (file extension .rnl) that sets up the information
needed to call the Rmpi package for a specific computation.

Throughout this README file we refer to the "batch script", which is
the (commented) R code in src/HPC4StatsSupervior.R. Output from Rmpi
is in the form of a list written as R binary data files along with a
copy of the R namelist file. That way everything is kept together and
6 months later there is a chance of reconstructing what was run!

Some timing is also included as this may be of interest in planning
future runs.  What we realized is that it is better to keep the script
that actually spawns workers and calls Rmpi (HPC4StatsSupervisor.R)
fixed and make modifications to only the R namelist file to specify
the key data sets, file names and functions that are specific to a
particular computation.The R namelist file makes it possible to have a
generic batch file that actually creates the worker R sessions and
calls Rmpi. An example R namelist file is template.rnl in the batch
subdirectory. To run this example in the batch subdirectory, you will
need the fields and Rmpi libraries installed in R. We also found it is
a good idea to setup a reproducible list of the data objects,
functions and libraries that are needed by the workers rather than
hard code these for each batch job.

To run the example, move to the batch subdirectory of HPC4Stats and
type in a UNIX bash shell (or equivalent on your system):

R CMD BATCH --no-save ../src/supervisorBatch.R template.Rout See file
READMEbatch for more details about how this works.

This example reads in, and then broadcasts to the workers, a data set
of 89 daily ozone values across the Midwest US. The task is to compute
some statistics for each separate day. Here the task id corresponds to
a different day. After this runs, examine the template.Rout file to
see what it did.  Also look at the output subdirectory to see the new
output file.

Perhaps the most confusing part of this setup is how the name of the R
namelist file (e.g. "template.rnl") is passed to the batch script. See
supervisorBatch.R for this detail. An alternative way to set the name
of this file is through an environment variable and the the
READMEbatch file explains how to do this.

By default the output is in the subdirectory output and has a unique
file name based on the project name and the time. This skeleton
includes a sample from a previous run to check your results.

See HPC4StatsSupervisor.R in the src subdirectory for the details of
how the information in the .rnl file is used to manage the Rmpi
computation. The function in dotaskTest.R is the task specific
function that each worker uses. If we were control freaks at this
point we would write: “Don’t change any part of HPC4StatsSupervisor.R
unless you understand what it is doing”. However, this all just R code
and that flexibility to modify it to your needs may be an attraction
to use this framework.

We do recommend thinking creatively about using the R namelist format
before changing this source file.  Keep in mind that the .rnl file is
just R code that is sourced _before_ the rest of the
HPC4StatsSupervisor.R batch script. Thus one can do all kinds of
computation to setup the Rmpi runs. In particular the task table can
be made complex for some applications to connect an integer taskID to
the all the information that is needed for the worker to do the
computation. For example, for climate model output the taskTable could
map the taskID (a row in a data frame) to the specific grid box and
fitting parameters. It could also specify filenames that link to
subsets or tiles of the data that would be read in or written to by
the workers.

