*************************************************
* HPC4Stats/HPC4StatsCMIP/batch/READMEGPDlaptop
*************************************************

This example is defined in laptopGPDProduction.rnl and is setup to
read the original model output file in NETCDF format. You will need to
download this (large 2.8Gb) file:
  
  pr_day_CCSM4_historical_r1i1p1_19550101-19891231.nc

separately and modify the line
 
  dataDir <- "/Users/nychka/Dropbox/Data"
 
in this namelist laptopGPDProduction.rnl to where you have put the file. 

To run this example in the bash UNIX shell and in this batch directory:

  export HPC4StatsNAMELIST=laptopGPDProduction.rnl    
  R CMD batch --no-save ../src/HPC4StatsSupervisor.R  laptopGPD.Rout

To run the version of this example on Cheyenne, in UNIX, and in the
HPC4StatsCMIP/batch directory

  cp pbs/cheyenneGPDProduction.pbs .
  qsub cheyenneGPDProduction.pbs

This version through the choices in the PBS script uses 75 cores across two
nodes and covers a larger number of latitude bands.
    
#####################################################
# checking  results with an example how to reassemble
# output from separate chunks
#####################################################

# see the plot:
#    laptopGDPProductionPlot.pdf
# for the laptop results

# in R and setting working directory to this batch directory.                 
   fname<-  dir("../output")
   print( fname)
   
# make sure that the fname array of filenames is just a single file
# or the chunks of output that you want -- just reduce this to be
# the right subset if includes other output files.

# create empty array indexing lon/lat to hold the estimated return levels
  look<- matrix( NA, nrow=288, ncol= 192)
   
# assume every filename in fname is a chunk from this run
# each chunk knows what lon/lat cells that it worked on from the
# I and J components in result.
# Note that assembling the image this way does not depend on the order the
# chunks are read in.
 
 for (  iChunk in 1: length( fname)){
    iChunkName<-  fname[iChunk])
    load(  paste0("../output/",iChunkName ) )
    result <- ( get(iChunkName) )$result
    N<- length(result)
#   A loop over over the grid boxes in this chunk   
    for(  k in 1 : N ){
      temp<- result[[k]]
#  fifth value is return level from fit
      look[temp$I,temp$J] <-  temp$outSummary[,5]
    }
 }   

# Now plot the results with a map

# NOTE: To avoid reading the large data file again the lon and lat grid
# has been saved previously using the R code:
#
# library( ncdf4)
# dataFileName <- paste0("/Users/nychka/Dropbox/Data/",
#  "pr_day_CCSM4_historical_r1i1p1_19550101-19891231.nc")
# dataHandle <- nc_open(dataFileName)
# lon<- ncvar_get(dataHandle, "lon")
# lat<- ncvar_get(dataHandle,"lat")
# save( lon, lat, file="../data/lonlatCCSM4.rda")
#

pdf("../data/GPD.pdf")
library( fields)
load( "../data/lonlatCCSM4.rda")
image.plot( lon,lat, log10(look))
# use world2 for 0-360 lon coordinates.
map("world2", add=TRUE)
dev.off()





   